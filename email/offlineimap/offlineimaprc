[general]
accounts = SHCA,Gmail,Space
maxsyncaccounts = 3
pythonfile = ~/.offlineimap.py
fsync = False

[Account Gmail]
autorefresh = 10
localrepository = Local
remoterepository = Remote
status_backend = sqlite
synclabels = yes
maxage = 15

[Account Space]
autorefresh = 5
localrepository = LocalSpace
remoterepository = RemoteSpace
status_backend = sqlite
synclabels = yes

[Account SHCA]
autorefresh = 20
localrepository = LocalSeanHagenCA
remoterepository = RemoteSeanHagenCA
status_backend = sqlite
synclabels = yes
maxage = 15

[Repository LocalSeanHagenCA]
type = Maildir
localfolders = ~/Mail/SHCA

[Repository RemoteSeanHagenCA]
type = Gmail
remoteusereval = get_username("seanhagen.ca")
remotepasseval = get_password("seanhagen.ca")
realdelete = no
maxconnections = 3
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
folderfilter = lambda folder: folder in ['[Gmail]/All Mail', '[Gmail]/Sent Mail', '[Gmail]/Drafts', '[Gmail]/Trash', '[Gmail]/Starred']
nametrans = lambda foldername: foldername.replace("[Gmail]/","")

[Repository LocalSpace]
type = Maildir
localfolders = ~/Mail/Space

[Repository RemoteSpace]
type = Gmail
remoteusereval = get_username("spacelist.ca")
remotepasseval = get_password("spacelist.ca")
realdelete = no
maxconnections = 3
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
folderfilter = lambda folder: folder in ['[Gmail]/All Mail', '[Gmail]/Sent Mail', '[Gmail]/Drafts', '[Gmail]/Trash', '[Gmail]/Starred']
nametrans = lambda foldername: foldername.replace("[Gmail]/","")

[Repository Local]
type = Maildir
localfolders = ~/Mail/Gmail

[Repository Remote]
type = Gmail
remoteusereval = get_username("mail.google.com")
remotepasseval = get_password("mail.google.com")
realdelete = no
maxconnections = 3
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
folderfilter = lambda folder: folder in ['[Gmail]/All Mail', '[Gmail]/Sent Mail', '[Gmail]/Drafts', '[Gmail]/Trash', '[Gmail]/Starred']
nametrans = lambda foldername: foldername.replace("[Gmail]/","")